apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-actual-server
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: actual-server
  template:
    metadata:
      labels:
        app: actual-server
    spec:
      containers:
      - name: actual-server
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 5006
        env:
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /data
          {{- if .Values.persistence.subPath }}
          subPath: {{ .Values.persistence.subPath }}
          {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          exec:
            command: ["node", "src/scripts/health-check.js"]
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 10
          failureThreshold: 3
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
