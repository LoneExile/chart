apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.postgresql.persistence.claimName }}
spec:
  storageClassName: {{ .Values.postgresql.persistence.defaultStorageClass }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgresql-ha-pgpool
  labels:
    app: postgresql
spec:
  ports:
    - name: postgresql
      port: {{ .Values.postgresql.service.port }}
      targetPort: {{ .Values.postgresql.service.targetPort }}
  selector:
    app: postgresql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  serviceName: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.credentials.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresql.credentials.password }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - name: postgresql
          containerPort: {{ .Values.postgresql.service.targetPort }}
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 12 }}
        volumeMounts:
          {{- range .Values.postgresql.persistence.mountPaths }}
          - mountPath: {{ .path }}
            name: postgres-storage
            {{- if .subPath }}
            subPath: {{ .subPath }}
            {{- end }}
          {{- end }}
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: {{ .Values.postgresql.persistence.claimName }}
