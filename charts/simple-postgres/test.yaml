---
# Source: simple-postgresql/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-ja-postgres-secret
  labels:
    helm.sh/chart: simple-postgresql-0.1.0
    app.kubernetes.io/name: simple-postgresql
    app.kubernetes.io/instance: test-ja
    app.kubernetes.io/version: "16.6"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  POSTGRES_USER: YWRtaW4=
  POSTGRES_PASSWORD: YWRtaW4=
  POSTGRES_DB: cG9zdGdyZXM=
---
# Source: simple-postgresql/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-ja-postgresql-service
  labels:
    app: postgresql
    helm.sh/chart: simple-postgresql-0.1.0
    app.kubernetes.io/name: simple-postgresql
    app.kubernetes.io/instance: test-ja
    app.kubernetes.io/version: "16.6"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: http
      port: 5432
      targetPort: 5432
  selector:
    app: postgresql
---
# Source: simple-postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-ja-postgresql
  labels:
    helm.sh/chart: simple-postgresql-0.1.0
    app.kubernetes.io/name: simple-postgresql
    app.kubernetes.io/instance: test-ja
    app.kubernetes.io/version: "16.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  serviceName: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: "postgres:16.6"
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: test-ja-postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: test-ja-postgres-secret
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - name: postgresql
          containerPort: 5432
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-storage
            subPath: config/somename/db/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: your-claim-name
